user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;
    proxy_intercept_errors   on;
    proxy_buffers            256 4k;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_read_timeout 300s;
    proxy_send_timeout 300s;
    proxy_connect_timeout 300s;

    #upstream은 데이터를 보내는 서버. 즉, 이곳을 http프로토콜의 리퀘스트를 보낸 다는 의미이다.
    # 여러개를 묶어서 쓸 수 있음
    upstream api {
        server JSAB-api:8080;
        #예)server 127.0.0.1:123;
        #예)server 127.0.0.1:124;
        #예)server 127.0.0.1:125;
    }

    #upstream next-front {
    #    server next-front:3000;
    #}
    server {
        listen       80;
        server_name  localhost;

        #access_log  /var/log/nginx/host.access.log  main;

        #location / {
        #     proxy_pass   http://next-front/;
        #     proxy_set_header X-Forwarded-For $remote_addr;
        #}

        # 위의 경로로 들어오면 proxy_pass로 적혀진 곳으로 연결 (여기서는 위 upstream에 쓰인 spring-api을 적어주었음)
        # server_name/api 경로로 들어오게 되면 docker의 spring-api 컨테이너의 8080포트로 중계해준다
        location /api/ {
            proxy_pass   http://api/;
            proxy_set_header X-Forwarded-For $remote_addr;
        }
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
}